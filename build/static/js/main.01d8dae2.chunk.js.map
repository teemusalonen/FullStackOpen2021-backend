{"version":3,"sources":["Components/Persons.js","Components/Filter.js","Components/Notification.js","Components/PersonForm.js","Services/personService.js","App.js","index.js"],"names":["Persons","personsToShow","handleDelete","map","person","name","number","onClick","id","Filter","visibilityHandler","searchValue","onChange","value","Notification","message","type","className","PersonForm","addPerson","handleNameInput","handleNumberInput","newName","newNumber","onSubmit","url","e","getAll","axios","get","then","response","data","create","newObject","post","del","delete","replace","put","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchValue","notificationMsg","setNotificationMsg","notificationType","setNotificationType","useEffect","personService","initialPersons","renderAnimation","setTimeout","showSearch","filter","toLowerCase","includes","event","target","preventDefault","personObject","equals","find","window","confirm","res","status","copy","catch","p","returnedPerson","concat","deleteResponse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01d8dae2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ personsToShow, handleDelete }) => {\r\n\r\n  return (\r\n    <div>\r\n      {personsToShow.map(person => (\r\n        <p key={person.name}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => handleDelete(person.id, person)}>delete</button>  \r\n        </p>\r\n    ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({ visibilityHandler, searchValue }) => {\r\n    \r\n    return(\r\n        <div>\r\n            filter shown with <input onChange={visibilityHandler} value={searchValue}/>\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default Filter","import React from \"react\"\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={type}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst PersonForm = ({ addPerson, handleNameInput, handleNumberInput, newName, newNumber }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input onChange={handleNameInput} value={newName} />\r\n        </div>\r\n        <div>\r\n          number: <input onChange={handleNumberInput} value={newNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst url = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(url)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(url, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n    const request = axios.delete(`${url}/${id}`)\r\n    return request.then(response => response)\r\n}  \r\n\r\nconst replace = (person, id) => {\r\n    const request = axios.put(`${url}/${id}`, person)\r\n    return request.then(response => response)\r\n}\r\n\r\nconst e = {\r\n    getAll,\r\n    create,\r\n    del,\r\n    replace\r\n}\r\n\r\nexport default e","import React, { useState, useEffect } from 'react'\nimport Persons from './Components/Persons'\nimport Filter from './Components/Filter'\nimport Notification from './Components/Notification'\nimport PersonForm from './Components/PersonForm'\nimport personService from './Services/personService'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchValue, setSearchValue] = useState('')\n  const [ notificationMsg, setNotificationMsg ] = useState(null)\n  const [ notificationType, setNotificationType ] = useState('error')\n  \n  useEffect(() => {\n    personService      \n      .getAll()      \n      .then(initialPersons => {        \n        setPersons(initialPersons)      \n      })\n  }, [])\n\n  // (ylimääräinen) metodi notificaation animaatioille\n  const renderAnimation = type => {\n    setNotificationType(`${type}In`)\n    setTimeout(() => {\n      setNotificationType(`${type}Out`)\n    }, 3000)\n    setTimeout(() => {\n      setNotificationMsg(null)\n    }, 3500)  \n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n        name: newName,\n        number: newNumber\n    }\n    const equals = persons.find(person => person.name === personObject.name)\n    if(!equals){ \n      personService \n      .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMsg(`${returnedPerson.name} was succesfully added`)\n          renderAnimation('success') \n        })\n    }else{\n      if(window.confirm(`${newName} is already added to the phonebook, replace the old number with the new one?`)){\n        personService\n        .replace(personObject, equals.id)\n        .then(res => {\n          if(res.status === 200 | res.status === 204){\n            const copy = [...persons]\n            personObject.id = equals.id\n            copy[equals.id-1] = personObject\n            setPersons(copy)\n            setNewName('')\n            setNewNumber('')\n            setNotificationMsg(`${personObject.name} was succesfully changed`)\n            renderAnimation('success')\n          }\n        })\n        .catch(() => {\n          setNotificationMsg(`${newName} has already been deleted from server and the phonebook was updated`)\n          renderAnimation('error')\n          const copy = persons.filter(p => p.name !== newName)\n          setPersons(copy)\n          setNewName('')\n          setNewNumber('')\n        })  \n      }\n    }\n  }\n\n  const handleNameInput = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value)\n  }\n  \n  const visibilityHandler = (event) => {\n    setSearchValue(event.target.value)\n  }\n\n  const handleDelete = (id, person) => {\n    if (window.confirm(`Do you really want to delete ${person.name}?`)) {\n      const deleteResponse = personService.del(person.id)\n      deleteResponse.then(res => {\n        if(res.status === 200 | res.status === 204){\n          const copy = persons.filter(p => p.name !== person.name)\n          setPersons(copy)\n          setNotificationMsg(`${person.name} was succesfully deleted`)\n          renderAnimation('success')\n        }\n      })  \n      deleteResponse.catch(() => {\n        setNotificationMsg(`${person.name} has already been deleted from server and the phonebook was updated`)\n        renderAnimation('error')\n        const copy = persons.filter(p => p.name !== person.name)\n        setPersons(copy)\n      })\n    }\n  }\n\n  const showSearch = persons.filter(person => person.name.toLowerCase().includes(searchValue.toLowerCase()))\n  \n  const personsToShow = (searchValue === '' || showSearch === []) ? persons : showSearch\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      \n      <Notification message={notificationMsg} type={notificationType} />\n\n      <Filter visibilityHandler={visibilityHandler} searchValue={searchValue} />\n      \n      <h3>add a new</h3>\n      \n      <PersonForm \n        addPerson={addPerson} \n        handleNameInput={handleNameInput} \n        handleNumberInput={handleNumberInput} \n        newName={newName} \n        newNumber={newNumber} \n      />\n\n      <h3>Numbers</h3>\n      \n      <Persons personsToShow={personsToShow} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}